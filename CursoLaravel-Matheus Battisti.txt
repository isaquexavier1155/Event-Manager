
			Laravel

	Framework construido em linguagem PHP
	Utiliza arquiteturs MVC (Model, Viw e Controller)
	Utiliza classe, metodos e propriedades
	Controller: Onde fica logica de negocios, validações
	Model: onde ocorre gerenciamaneto de banco de dados
	View: Parte visula do sistema
	Artisan:Terminal de gerenciamento do banco de dados atraves de comandos
	Migrations: Como se fosse versionamento de banco de dados
	Blade: Ajuda manusear a view do sistema 
	Facil de criar codigo
	Estrutura de pastas organizadas
	
	Intalação: tem que ter php superior a 7.3 -ok tenho o 8.2.5
	Composer - ok
	VS Code - ok
	Xamp - ok

	
	Rodar comando no terminal do Vs Code para instalar o Laravel: 
	composer create-project --prefer-dist laravel/laravel hdcevents
	hdcevents é o nome do projeto
	Ir na pasta raiz do projeto e executar com comando: cd hdcevents 
	Depois executar o Laravel com o seguinte comando: php artisan serve para iniciar servidor web
	Depois entrar no navegador pelo endereço: http://127.0.0.1:8000


	ROTAS E VIWES

	Vamos acessar as paginas do projeto pelas rotas: URL
	Viwes: são as representações gráficas das páginas
	Nas viewu teremos os templates onde ha a estruturação da página por meio de HTML
	Templates podem rederizar dados dinamicos por meio do PHP
	Blade e templates são sinonimos
	
	Arquivo web.php tem todas as rotas disponíveis do Laravel

	BLADE: Template Engine do Laravel
	HTML puro pelo Blade e com Engine(Motor) busca dados do banco e das controllers
	Deixa as views dinamicas
	Views são responsabilidades do Blade
	Condicionais, for, forecah

	DIRETIVAS
	Diretivas do template Engine no HTML 
	Exemplo mostra resulado na tela conforme codicional
	@if(10 > 5)
                		<p>A condição é true</p>
        	@endif

*******************************Exemplo de diretiva com dados dinâmicos:

	   <p> {{ $nome }} </p>  
     	@if($nome == "Isaque")
        		<p>O nome é Isaque</p>
     	@else
        		<p>O nome não é Isaque</p>
     	@endif

*************************************

	Todos os dados dinâmicos estão entre duas chaves no meio do HTML, por exemplo num <p></p>

	AVANÇANDO NO BLADE - O que podemos fazer com Blade?
	Criar estrutura de repetição for e for each
	Poder escrever PHP puro
	Escrever comentários nos arquivos de view
	Limitar acesso de usuários
	Autenticação

	ADICIONANDO ARQUIVOS ESTÁTICOS
	
	Os arquivos estáticos, css e js devem ser adicionados dentro da pasta public do projeto Laravel
	Laravel proporciona uma maneira muito fácil de inserir estes arquivos estáticos
	Todos estes recursos estao na pasta public

	Layouts com Blade
	Para reaproveitar codigos
	Usar mesmo header e footer em todas as páginas sem repetir codigos
	Podemos criar seções do site que muda conforme usuário estiver logado ou deslogado e title da página
	
	Prática

	Comentar , comentario, comentário bloco:  VS CODE PHP:  CONTROL+K E DEPOIS CONTROL+C
	<!-- mudar conteudo dinamicamente -->
       	 @yield('content')

	Para utilizar layouts do Blade deve-se colocar a notação @yield onde será obtido conteudo (main.blade.php)
	E nas views coloca-se as @sections referentes a cada @yield para receber o conteudo obtido (products.blade.php) 

	Parâmetros nas rotas

	Podemos mudar como uma view nos responde adicionando parâmetros
	Ao definir a rota devemos colocar o parâmetros desta meneira: {id}
	Podemos ter parÂmetros aopcionais tambem, adicionando uma ?;
	Podemos usar query parameters, utilizando a seguinte sintaxe: ?nome=Marheus&idade=29

	Teste no navegador: http://127.0.0.1:8000/produtos

	Criando Controllers
	
	Tem papel de enviar e esperar resposta do banco de dados e para views
	Podem ser criados via artisan via comando no terminal
	Redirecionamento para URL 
	Cada controle tem uma action de ums rota

	Comando para criar controller via linha de comando: php artisan make:controller EventController
	Nome da classe de controle: EventController
	PS C:\Users\isaqu\OneDrive\Documentos\Curso-PHP\Curso Laravel\hdcevents> php artisan make:controller EventController

	    Tarefa:: Criar controllers para contatos e produtos


	CONEXÃO DO LARAVEL COM BANCO DE DADOS
	

	Segurança foi aprimorada no Laravel
	Toda a configuração do Laravel fica em arquivo .env
	Laravel tambem utiliza um ORM(Object-Relational Mapping) chamada Eloquent
	e Migrations para gerenciamento de tabelas e versionamento do banco de dados, roolback

	Conexão de Laravel com banco de dados

	1 - Abrir Xampp (servidor de banco de dados)
	2 - Ligar MySQL e Apache no Xampp
	3 - Acessar PHP MY ADMIN: http://localhost/phpmyadmin/
	4 - Crie banco de dados chamado hdceventscurso 
	5 - executar comando no terminal VScode, dentro da pasta raiz do projeto, para criar tabelas padrões do Laravel: 
	6 - Adição de extensão PDO MYsql
	7 - Comando: php artisan migrate
	Criação da tabela relaizada com sucesso.

	MIGRATIONS

	Funcionam como um versionamento de banco de dados
	Podemos avnçar e retroceder a qualquer momento
	Adicionar colunas e remover de forma facilitada
	Fazer setup de BD de uma nova instalação em apenas um comando
	Podemos verificar as migations com migrate:status

	Comado para criar migration: php artisan make:migration create_products_table
	Ver status da migation: php artisan migrate:status
	Quando status estiver pending deve-se significa que ela não foi rodada ainda
	Então executamos: php artisan migrate

	Ao adicionar um campo manualmente no arquivo da pasta migrations,  com o comando: $table->string('name');
	ATENÇÃO: Ao executar comando FRESSH irá perder todos os dados salvos nas tabelas
	Devemos executar: php artisan migrate: fresh para deletar e refazer todas as tabelas novamente
	Teste commmit

	Ajustar tamanho dos campos
	$table->string('name', 100);
            	$table->integer('qtd');
            	$table->text('description');


	AVANÇANDO EM MIGRATIONS
	
	Ao adicionar novo campo em tabela deve-se criar uma nova migration
	rollback: volta uma migration
	reset: voltar todas as migrations
	refresh: voltar todas as migrations e rodar migrate novamente

	ADICIONAR NOVA COLUNA OU CAMPO EM TABELA EXSITENTE
	Para gerar nova campo sem intervir em outras tabelas os campos criados, executar o seguinte comando:
	php artisan make:migration +NOMEDACOLNA exem-> php artisan make:migration add_category_to_products_table
	depois ediatar migration gerada e adicionar campos manualmente nos metodos e 
	down
	$table->dropColumn('category');
	e metodo up 
	$table->string('category', 100);
	para funcionar o rollback o metodo down deve estar no seguinte formato: $table->dropColumn('category');
	
	para voltar campo imediatamnete após ser criado: 
	php artisan migrate:rollback


	ELOQUENT
	OBTENDO DADOS DA TABELA ATRVÉS DE MODEL, VIEW ECONTROLLER (MVC)

	Eloquente é a ORM (abstração as querys por exemplo select from...) do Laravel
	Cada tabela tem um model que é responsavel pela interação entre as requisições ao banco
	A convençao para o Model é o nome da entidade em singular
	No model faremos poucas alterações dos arquivos geralmente configurações específicas	

	echo('<pre>');
	echo('Param: ').PHP_EOL;
                 var_dump($param).PHP_EOL;
	echo('</pre>');

	Estava dando erro de extensoes novamente ai tive que conferir os arquivos php.ini e reiniciar o sitema para corriigir o problema
	
	FINALIZANDO A HOME HTM E CSS

	Adicionando registro ao banco

	No laravel é comun ter uma action específica para o post chamada de STORE
	Lá vamos criar o objeto e compor ele com base nos dados enviados pelo POST
	Com o objeto formado utlizamos o método SAVE para persistir os dados
	
	Criar designer do fomrulário, exemplo no arquivo create.blade.php: 
@section('content')

<div id="event-create-container" class="col-md-6 offset-md-3">
    <h1>Crie o seu evento</h1>
    <form action="/events" method="POST">
        <div class="form-group">
           <label for="titlr">Evento:</label> 
           <input type="text" class="form-control" id="title" name="title" placeholder="Nome do Evento ">
        </div>
        <div class="form-group">
           <label for="titlr">Cidade:</label> 
           <input type="text" class="form-control" id="city" name="city" placeholder="Local do Evento ">
        </div>
        <div class="form-group">
           <label for="titlr">O evento é privado?:</label> 
           <select name="private" id="private" class="form-control">
                <option value="0">Não</option>
                <option value="1">Sim</option>
           </select>
        </div>
        <div class="form-group">
           <label for="titlr">Descrição:</label> 
           <textarea name="description" id="description" class="form-control" placeholder="O que vai acontecer no evento?"></textarea>
        </div>
        <input type="submit" class="btn btn-primary" value="Criar Evento">
    </form>
</div>

@endsection

	Depois criar rota de post no formulário, exemplo arquivo web.php
	

	Flash Messages

	Podemos adicionar mensagens ao usuario por session
	Estas mensagens são conhecidas por flash messages
	Podemos adicionar com método with nos controllers
	Utilizdas para apresentar um feedback ao usuario
	No blade podemos verificar a presença da mensagem pela diretiva @session;

	Para executar mensagens de sucesso ou error deve-se adicionar no layout principal com ->with e depois deve-se
	verificar se existe mensagem na classe principal do HTML

	Fazendo Upload de Imgens com Laravel
	
	tem que mudar enctype do from e criar um input de envio das mesmas;
	Fazer um tratamento de verificação no controller;
	Depois salvar a imagem com nome unico;
	No banco salvamos apenas o path para a imagem.

/////////////////////////////////////////////////////////////

	Para criar novo campo na tabela sem apagar todos os registros salvos:
	comando: php artisan make:migration add_image_to_events_table
	Ajustar codigo da migration
	Em seginda ajustar a função up: $table->string('image');
	E ajustar a função down: $table->dropColumn('image');
	Para adicionar campo image na tabela do banco de dados
	Depois executar: php artisan migrate

	Resgatando Registro do banco de dados

	Construção da View do evento;
	Resgatar apenas um registro;
	Utilização do método findOrFail;
	Criação de nova view e rota para esta função;
	Esta tela tem a funçaõ de exibir todas a informações do evento e tambem botão de participar.


	Manipulando Arquivos JSon
	
	Podemos salvar um conjunto de dados no banco para itens de múltipla escolha;
	Criação de campo determinado de json via migration;
	Utilização de input com checkbox;
	Apos envio para controller receber request.

	1 - php artisan make:migration add_items_to_events_table
	2 - Editar métodos up e dow da migration
	3 - php artisan migrate

	Salvando Datas no Banco de Dados com Laravel

	Precisamos criar um input do tipo date na nossa view;
	Um campo de dateTime via migrations
	E processar o envio dos dados via contoller pelo request de POST.
	
	Busca no Laravel
	Utilizar o Eloquent;
	Utilizar where fazendo filtro e enviando para a view;
	Fzer a exibição da busca na pr´pria Hime mudando layout com diretivas de Blade.

	Autenticação no Laravel
	Utilizar o Jetstream;
	Instalar o pacote via composer;
	Depois instalar o Liveware;
	E por fim rodamos as migrations.

	1 - comando: composer require laravel/jetstream
	2 - php artisan jetstream:install liveware
	3 - npm install
	4 - npm run dev	
	3 - php artisan migrate:status
	4 - php artisan migrate
	5 - php artisan migrate:status

	@guest
	@endguest

	Nova senha gam
	migrate:status
	trans: migrate:statuss

	Login: isaque.ixs@gmail.com
	pass: 11551011


	Relacionamento entre Tabelas - Relations(one to many)

	Relaçao de um para muitos;
	Um usuário será dono de um evento;
	Alterar migrations.

	
	php artisan make:migration add_user_id_to_events_table
	Editar up
	$table->foreignId('user_id')->constrained();
	Editar down
	$table->foreignId('user_id')
            	->constrained()
            	->onDelete('cascade');

	Depois adicionar uma funcao para cada model relacionada
	Event.php
	// Para indicar que esse evento pertence a um usuário
   	 public function user() {
        	return $this->belongsTo('App\Models\User');
   	 }
	User.php
	//indica que um usuário tem muiros eventos
	public function events() {
        	return $this->hasMany('App\Models\Event');
    	}
	
	Ao pegar usuário saber quais eventos estão vinculados 
	E ao pegar um evento saber qual usuário esta vinculado a ele
	
	php artisan migrate:fresh

	Adicionar na controller:
	$user = auth()->user();
       	 $event->user_id = $user->id;

	Adicionar função na rota que só podera ser acessada se usuário estiver logado (->middleware('auth');)
	Exemplo rota de criação de eventos -> Criar evento
	Route::get('/events/create', [EventController::class, 'create'])->middleware('auth');

	Exibindo dados do usário na view
	
	Editar eventController
	 $eventOwner = User::where('id', $event->user_id)->firt()->toArray();
	e
	return view('events.show', ['event' => $event, 'eventOwner' =>$eventOwner]);
	

**************************************************************************************
	Criando um dashboard ADministrativa

	
	Ligação de usuário com evento;
	Informar todos os eventos que usuário possui;
	Futuramente adicionar funcionalidade de edição e de deleção;
	Lista de todos os eventos vinculados ao usuário.

*****************************************************************
	Deletando Eventos

	Deletar Eventos;
	Utilizaremos uma nova rota para isso;
	Utilização do verbo HTTP DELETE;
	Criação de lógica no nosso Controller para essa alteração persistir no banco de dados.

	1 - Criação de rota com verbo DELETE - arquivo web.php
	Route::delete('/events/{id}', [EventController::class, 'destroy']);
	2 - Criação de função para deletar arquivo - arquivo EventController.php
	 public function destroy($id){
       	 Event::findOrFail($id)->delete();
        	return redirect('/dashboard')->with('msg', 'Evento excluído com sucesso!');
   	 }
	3 - Ajuste na view para exibir dados no front end - arquivo dashboard.blade.php
	 <td>
                        <a href="#" class="btn btn-info edit-btn"><ion-icon name="create-outline"></ion-icon> Editar</a>
                        <form action="/events/{{ $event->id }}" method="POST">
                            @csrf
                            @method('DELETE')
                            <button type="submit" class="btn btn-danger delete-btn"><ion-icon name="trash-outline"></ion-icon> Deletar</button>
                        </form>
                    </td>

**************************************************************

	Editando eventos

	Criar nova view e rota;
	Utilização de verbo HTTP chamado PUT;
	Persistir alterações no BD  por meio de uma action no Controller;
	Utlização de 2 actions.

*************************************************************
	
	Relations (many to many)

	Nova relção;
	Lógica de participação de eventos;
	Criação de nova tabela que administra estas relações seguindo a conveção do Larvel.

/////////////////////////////////////////////// Contas teste RifachancedOuro
		
	joao@gmail.com
	teste12345

	
	Login: isaque.ixs@gmail.com
	pass: 11551011

**********************************************************

	Exibindo eventos do Usuário e adição de segurança
	
	Alteração de segurança na rota de edição de eventos para não permitir editar evento se não pertencer ao usuário logado.
	Regra: Usuário só pode editar eventos criados por ele mesmo.

	public function edit($id){
        	$user = auth()->user();
        	$event = Event::findOrFail($id);

        	if($user->id != $event->user_id){
           	return redirect('/dashboard');
       	 }

        	return view('events.edit', ['event' => $event]);
  	  }


*************************************************
	Implementação de funcionalidade de sair do evento que estava participando - git
	Desativação de botão confirmar presença se já estiver participando do evento e estilização de mensagem informativa- git
	
***********************************************
	Integração de sistema de pagamento via pagseguro do uol
	
	1- Criar conta no pagseguro uol
	2- entrar na central de sandbox : https://sandbox.pagseguro.uol.com.br/primeiros-passos.html
	

	Meu token: 9105300A391A47B7AE5D1D41EBF2E9E5

	public key: {
  "public_key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr+ZqgD892U9/HXsa7XqBZUayPquAfh9xx4iwUbTSUAvTlmiXFQNTp0Bvt/5vK2FhMj39qSv1zi2OuBjvW38q1E374nzx6NNBL5JosV0+SDINTlCG0cmigHuBOyWzYmjgca+mtQu4WczCaApNaSuVqgb8u7Bd9GCOL4YJotvV5+81frlSwQXralhwRzGhj/A57CGPgGKiuPT+AOGmykIGEZsSD9RKkyoKIoc0OS8CPIzdBOtTQCIwrLn2FxI83Clcg55W8gkFSOS6rWNbG5qFZWMll6yl02HtunalHmUlRUL66YeGXdMDC2PuRcmZbGO5a/2tbVppW6mfSWG3NPRpgwIDAQAB",
  "created_at": 1577836800000
}
	
	MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr+ZqgD892U9/HXsa7XqBZUayPquAfh9xx4iwUbTSUAvTlmiXFQNTp0Bvt/5vK2FhMj39qSv1zi2OuBjvW38q1E374nzx6NNBL5JosV0+SDINTlCG0cmigHuBOyWzYmjgca+mtQu4WczCaApNaSuVqgb8u7Bd9GCOL4YJotvV5+81frlSwQXralhwRzGhj/A57CGPgGKiuPT+AOGmykIGEZsSD9RKkyoKIoc0OS8CPIzdBOtTQCIwrLn2FxI83Clcg55W8gkFSOS6rWNbG5qFZWMll6yl02HtunalHmUlRUL66YeGXdMDC2PuRcmZbGO5a/2tbVppW6mfSWG3NPRpgwIDAQAB


*********************************************
	Integração com Pix PHP

	echo "<pre>";
	print_r($obPayload);
	echo "</pre>";

https://www.bcb.gov.br/content/estabilidadefinanceira/pix/Regulamento_Pix/II_ManualdePadroesparaIniciacaodoPix.pdf


	Linha que está gerando 6010 em vez de gerar 6009
	Deve gerar 6009
	$this->getValue(self::ID_MERCHANT_CITY, $this->merchantCity).

	Login W3 para imagens online svg
	https://www.w3.org/users/151000/
	login: isaqueixs-gmailcom2024
	ub_ty7ym8XsRz6454545f

////////////////////////////////////////////////////////////////////////

	Salvar dados no banco de dados criado com 
	
	// Criar tabela exemplo
	1 - php artisan make:migration create_rifas_table
	// Editar métodos up e dow
	2 - Editar métodos up e dow da migration
	// Para confirmar a criação dos campos na tabela
	3 - php artisan migrate
	//Criação de model na pasta models
	4 - php artisan make:model Rifa
	// Criar controlador
	5 - php artisan make:controller RifaController
	6- php artisan migrate

/////////////////////////////////////////////////////////////
	Ao sair no sistema de Eventos vai para inicio  http://127.0.0.1:8000/
	Ao clicar en entrar vai para http://127.0.0.1:8000/login
	Ao clicar em login vai para http://127.0.0.1:8000/dashboard com Meus eventos e eventos que estou participando


	Arrecadação estimada = qtd_bilhetes * valor_bilhete

//////////////////////////////////////////////

Obteve dados dos campos valor_bilhetes e quantidade_bilhetes corretamente:

!-- Adicione no final do seu arquivo Blade -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function() {
        // Detecta o evento blur no campo quantidade_bilhetes
        $('#quantidade_bilhetes').on('blur', function() {
            // Obtém o valor do campo
            var valorBilhetes = $(this).val();

            // Atualiza a div com o valor do campo
            $('#valor-bilhetes-container').text('Quantidade de bilhetes: ' + valorBilhetes);
        });

        // Detecta o evento blur no campo valor_bilhetes
        $('#valor_bilhetes').on('blur', function() {
            // Obtém o valor do campo
            var valorBilhetes = $(this).val();

            // Atualiza a div com o valor do campo
            $('#valor-bilhetes-container').append('<br>Valor do Bilhete: ' + valorBilhetes);
        });
    });
</script>

////////////////////////////////////////////////////////////////
	Debugar Controller parâmetros com Laravel
	dd($obPayload);

	Debugar todos os dados do objeto no Controller
	dd($request->all());
////////////////////////////////////////////////////////////////
	Debugar View parâmetros com Laravel
    	<!-- Objeto esta chegando aqui completo da PixController -->
     	{{ dd($obPayload) }}  

/////////////////////////////////////////////// Objeto $obPayload

	App\Pix\Payload {#530 ▼ // app\Http\Controllers\PixController.php:28

  	-pixKey: "isaque.ixs@gmail.com"
  	-description: "Pagamento do pedido 123456"
  	-merchantName: "Willian Costa"
  	-merchantCity: "IGREJINHA"
  	-txid: "WDEV1234"
  	-amount: "3.00"
	}


//////////////////////////////////
	C:\Users\isaqu\OneDrive\Documentos\Curso-PHP\Curso Integração PIX PHP\files\certificates

/////////////////////////////////

	   echo "<pre>";
                    print_r($obApiPix);
                    echo "</pre>"; exit;

////////////////////////////////////////////// Retorno da rota de autenticação Post

{
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiY2xpZW50SWQiOiJDbGllbnRfSWRfNWQyODM2ZWUzM2FjZDFmMjczMTc4OTZmNTBlMmEzMThlMzI4OTllNSIsImFjY291bnQiOjUzMjY5MywiYWNjb3VudF9jb2RlIjoiODE4NGQxZmVlYzE5MmYzZjEyNmQwYjc5OGQ3ZTEwZTMiLCJzY29wZXMiOlsiY29iLnJlYWQiLCJjb2Iud3JpdGUiLCJjb2J2LnJlYWQiLCJjb2J2LndyaXRlIiwiZ24uYmFsYW5jZS5yZWFkIiwiZ24ucGl4LmV2cC5yZWFkIiwiZ24ucGl4LmV2cC53cml0ZSIsImduLnBpeC5zZW5kLnJlYWQiLCJnbi5yZXBvcnRzLnJlYWQiLCJnbi5yZXBvcnRzLndyaXRlIiwiZ24uc2V0dGluZ3MucmVhZCIsImduLnNldHRpbmdzLndyaXRlIiwiZ24uc3BsaXQucmVhZCIsImduLnNwbGl0LndyaXRlIiwicGF5bG9hZGxvY2F0aW9uLnJlYWQiLCJwYXlsb2FkbG9jYXRpb24ud3JpdGUiLCJwaXgucmVhZCIsInBpeC5zZW5kIiwicGl4LndyaXRlIiwid2ViaG9vay5yZWFkIiwid2ViaG9vay53cml0ZSJdLCJleHBpcmVzSW4iOjM2MDAsImNvbmZpZ3VyYXRpb24iOnsieDV0I1MyNTYiOiJuRXFac05aY21kRG9nc0xhYnFJWi9EUG1xNVZLWVM0Z1RZMFh2MGJzODM0PSJ9LCJpYXQiOjE3MDMwNzc3ODgsImV4cCI6MTcwMzA4MTM4OH0.w2-2b2PQEw-H3uqsiRbRBNY7xZuc41So88IMzHlLKA4",
    "token_type": "Bearer",
    "expires_in": 3600,
    "scope": "cob.read cob.write cobv.read cobv.write gn.balance.read gn.pix.evp.read gn.pix.evp.write gn.pix.send.read gn.reports.read gn.reports.write gn.settings.read gn.settings.write gn.split.read gn.split.write payloadlocation.read payloadlocation.write pix.read pix.send pix.write webhook.read webhook.write"
}

///////////////////////////////////////////////////////////////////////////

Dados utilizados  que deram certo para ambiente de homologação

	POST para : https://pix-h.api.efipay.com.br/oauth/token
	aba Authorization:
		Client_Id_5d2836ee33acd1f27317896f50e2a318e32899e5
		Client_Secret_5becb7a4e1075d8274c9dfea0087bf52e486cfe4

	Evironment: 
		Pix_Homologação
	Certificado: 
		host: pix-h.api.efipay.com.br
		PFX file: /C:/Users/isaqu/OneDrive/Documentos/Clone Git Hub Projeto Integração Api PIX com Atualização de Status/wdev-qrcode-pix-php/files/certificates/gerencianet.p12


//////////////////////////////////////////// Já configurado na collection da API

	aba Body: ->raw
		{
    		"grant_type": "client_credentials"
		}
	aba Tests:
		var jsonData = JSON.parse(responseBody);
postman.setEnvironmentVariable("Authorization", pm.response.json().token_type + ' ' + jsonData.access_token);

		var access_token = pm.response.json().access_token
postman.setEnvironmentVariable("access_token", access_token);


////////////////////////////////////////////

	Produção deve ser usada depois que tiver com sistema on line

/////////////////////////////////////////// TESTES

	Tenho que verificar posteriormente se rifa foi paga atraves do estatus do json retornado pela classe consulta-qrcode-dinamico e atraves do valor recebido no array das movimentações da cobrança abaixo do seguinte retorno:
	[solicitacaoPagador] => Pagamento do pedido 123

	Ao tentar escanear qrcode de pagamento pela caixa gerou o seguinte array
 [0] => Array
                (
                    [endToEndId] => E09089356202312201746API0a296965
                    [txid] => WDEV12341234123400000000010
                    [valor] => 10.00
                    [chave] => isaque.ixs@gmail.com
                    [horario] => 2023-12-20T17:46:03.000Z
                    [infoPagador] => Teste de pagamento em ambiente sandbox
                )


	Quando tentei escanear pagamento novamente pela caixa não mudou nada no retorno da requisição com a consulatar_qrcode...
	Quando tentei escanear pagamento novamente mas pelo banco do Brasil não mudou nada

	Quando tentei escanear pagamento novamente em requisição numero 11
	Inicialmete status estava como Ativa
	Quando tentei fazer o pagamento mas deu erro e mesmo assim mudou status do pagamneto para Concluido

	deixei a 12 e 11 como ativa
	e quando recarreguei a página de geração de qrcode mudou estatus da cobrnça para CONCLUIDA


	No postman Token é variavel a cada tempo
	Deve ser obtido novamente antes de cada nova requisição
/////////////////////////////////////////////

	Ao utilizar consulta de qrcode dinamico percebi que toda a transação fica com status Concluida em Homologação ao recarregar página ou tentar efetuar leitura de qrcode

	Fazer teste em produção para verificar esse comportamento

////////////////////////////////////////// TESTE EM AMBIENTE DE PRODUÇÃO

	escanear codigo e cancelar no meio para ver se muda status da cobrança
	Não muda - ok excelente continua ativo
	efetuar pagamento real com valor de 0.1 centavos e verificar status
	Ao efetuar pagamento status muda de ATIVA para CONCLUIDA 
	Recebi notificação de recebimento no app de 1 centavo mas ainda não caiu na inha conta online
	dinheiro é enviado corretamente
	recarregar página para ver se muda status
	Não muda - ok excelente continua ativo


///////////////////////////////////////////

	// Antes
// define('PIX_KEY','10e3ac8f-9664-4da2-868d-2d4bda9baa48');

// Depois
$pixKey = config('pix.key');

	
///////////////////////////////////

	Valor gerado: 3cbb433e70a3985c2bad5290f2

	Saúde, beleza e tempo
	Como melhorar tal serviço ou produto
	Fale o obvio
	Tem que vender ideias e beneficios e não produtos
	
	Tem que ser um bom demostrador de produtos



//////////////////////////////////////////////////

	pagam... = conteudo-central e centralized-content

	realize... centralized-content2 

	Valor: ... = #taxapublicacao


///////////////////////////////////////

	#successModalLabel {
   	 color: green;
	}

	.rifa-create-container {
    	margin-top: 0 !important;
	}


	#taxapublicacao {
    	color: green;
	}
	

	Estava ajustando esse valor para quando for da casa de milhar Valor: R$ 15000.00 virar 15.000,00

	
/////////////////////////////////////////////////////////// Ajustes finos

	Ver mais tarde quando tratar de SEO  e otimização quantos acessos sites de rifas estão tendo na web e ajustar meu 	de acordo com taxas de publicação e etc...




///////////////////////////////////////// SEO
	<meta name="description" content="frases para busca no google">
	<meta name="keywords" content="palavras pesquisadas, muitas palavras">


///////////////////////////////////////////// Templates prontos

	site para restaurante com encomenda direta no site: 
	https://demo.themefisher.com/cafedine-bootstrap/menu.html

	http://seu-site.com/rifas/7/publicacao

////////////////////////////////////////// Email email

	Novo email criado para sistema de rifas
	rifachancedouro@gmail.com
	snh: Ixsrifa55chance11douro@@
	https://www.rifachancedouro.com.br

///////////////////////////////////////////////////  Tarefas
	
	Ao salvar campnha deve ter status_cobrança_taxa_publicacao como ATIVA -ok
	Ao ser efetuado o pagamento deve mudar status para CONCLUIDA - ok
	Ao salvar campanha devo tambem salvar TXID no banco de dados para conferencias futuras-ok
	Ajustar stilo da página dashboard para mostrar status de pagamento -ok (Removido)
	Ajustar payment_fee_publication mostrando valor da taxa de publicação a ser paga -ok
	Salvar taxa de publicação a ser paga pelo contratante de serviços de rifa -ok 
	Ajustar dashboard para obter apenas rifas do usuário logado -ok
	Ajustar a página de pagamento: Adicionar instruções de pagamento via pix para acessibilidade -ok
	E tambem mostrar arrecadação estimada - ok

	Fazer um campo interativo em todas as paginas perguntando o seguinte: Está com alguma dúvida?
	E abaixo dessa pergunta um ícone de positivo ou negativo
	Quando usuário clicar em Positivo abrir input para ele enviar mensagem diretamente na página.
	Somente com email dele
	
	Adicionar descrição e imagem da campanha
	Esses itens serão exibidos quando pessoa for comprar numeros da rifa
	
	Criar no rodapé do site uma opção de made in RifaChanceDOuro e quando clicar ir para 
	https://rifa.digital/ onde podera ser efetuada uma campanha pelo próprio comprador das rifas


	Adicionei os campos descricao e imagem na tabela rifas mas não consegui salvar , ver controller


////////////////////////////////////////////////// Validações de segurança

           'imagem' => 'image|max:4096', // Limite de 4 MB (ajuste conforme necessário)
            // Ajustar tambem arquivo php.ini do local c - pesquisar upload_max e ajustar, esta em 4MB
            'nome_campanha' => 'required|string|max:255',
            'descricao' => 'required|string|max:1000',
            'quantidade_bilhetes' => 'required|integer|min:1',
            'valor_bilhetes' => 'required|numeric|min:0.01',	

//////////////////////////////////// Texto descrição
	Sorteio será realizado em live no youtube canal rifasChance de Ouro: link

	Quanto mais numeros você comprar mais cahnce tem de ganhar

	Sorteio válido até o dia 30/12/2023
///////////////////////////////////////////////////  Tarefas Futuras Pendentes

	
	Não esquecer de criar tela com descrição detalhada sobre todo o processo de criação de rifas para e ajudar no SEO da página futuramente
	Depois que eu colocar na rede testar responsividade e testar criação de usuário e reset de senha e erro que estava dando ao cadastrar novo usuário

///////////////////////////////////////////////////  Tarefas

	Ao salvar comprador tenho que vincular ele ao id da campanha para depois conseguir continuar - ok
	
	Ao criar comprador devo salvar mais um campo:  status_cobranca_bilhetes para ativar efeito de mudança de tela automática após pagamento dos bilhetes - ok

	Ao salvar novo usuário devo já salvar a chave_pix que será usada para receber valor dos bilhetes - ok 
	Alterar trecho para criar qrcode com chave dinâmica: 'chave' => $pixKey, na compradorController
	
	Ao criar comprador  devo salvar tambem a $txId; e $valor de pagamentoBilhetes




//////////////////////////////////////Racionais mcs projetos sociais

	Talentos aprisionados foi um projeto social que acontecia no carandiru atraves de um atris onde Dexter participou 
	Projeto Dexter: nome: Como vai seu mundo ou Como vai ser o Mundo
	
//////////////////////////////////////Alteração erro de consultQrCode


	Alterei public function consultQrCode() na classe: RifaController


	Esta dando erro ao salvar um novo usuário
	Tem a ver com a function atualizarStatusCobranca() {   da classe payment_...

	Esse erro corre quando em outra aba esta rodando páginas com script de verificação de Status
	2 Páginas de pagamento payment_...

/////////////////////////////////////////////////////// Arquivo com erros em ingles

	Traduzir conforme necessidade
	validation.php




















